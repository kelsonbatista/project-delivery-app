version: '3.9'
services:
  # frontend:
  #   build: ./front-end
  #   ports:
  #     - 3000:3000
  #   working_dir: /app-frontend
  #   volumes:
  #     - ./front-end/src:/app-frontend/src
  #   environment:
  #     - VITE_JWT_SECRET=jwt_secret
  #   depends_on:
  #     backend:
  #       condition: service_healthy
  #   # Os `healthcheck` devem garantir que a aplicação
  #   # está operacional, antes de liberar o container
  #   healthcheck:
  #     test: ['CMD', 'lsof', '-t', '-i:3000'] # Caso utilize outra porta interna para o front, altere ela aqui também
  #     timeout: 10s
  #     retries: 5
  # backend:
  #   build: ./back-end
  #   ports:
  #     - 3001:3001
  #   working_dir: /app-backend
  #   command: npm run dev
  #   volumes:
  #     - ./back-end/src:/app-backend/src
  #   depends_on:
  #     db:
  #       condition: service_healthy
  #   environment:
  #     - APP_PORT=3001
  #     - JWT_SECRET=jwt_secret
  #     # Os dados abaixo se referem ao container `db`
  #     # Dica: Relembre aqui da comunicação interna entre containers
  #     - MYSQL_USER=root
  #     - MYSQL_PASSWORD=password
  #     - MYSQL_HOST=db
  #     - MYSQL_PORT=3306
  #   healthcheck:
  #     test: ['CMD', 'lsof', '-t', '-i:3001'] # Caso utilize outra porta interna para o back, altere ela aqui também
  #     timeout: 10s
  #     retries: 5
  db:
    image: mysql:8.0.21
    container_name: db
    platform: linux/x86_64
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=password
    restart: 'always'
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'db'] # Deve aguardar o banco ficar operacional
      timeout: 10s
      retries: 5
    cap_add:
      - SYS_NICE # Deve omitir alertas menores
